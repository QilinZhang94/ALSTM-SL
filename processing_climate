# -*- coding: utf-8 -*-
"""
Created on Mon Nov 15 10:14:25 2021

@author: Qilin Zhang
"""

import numpy as np
import xlrd
from datetime import datetime
from xlrd import xldate_as_tuple

def ProcessClimate(sheet):
    filename = 'Bucket_96806/Bucket_96806.xls'
    workbook = xlrd.open_workbook_xls(filename)
    sheet1 = workbook.sheet_by_name(sheet)
    rows = sheet1.nrows
    cols = sheet1.ncols
    data_all = []
    for i in range(1,rows):
        data1 = []
        for j in range(cols):
            ctype = sheet1.cell(i, j).ctype  
            cell = sheet1.cell_value(i, j)
            if ctype == 2 and cell % 1 == 0:  
                cell = int(cell)
            elif ctype == 3:
                
                date = datetime(*xldate_as_tuple(cell, 0))
                cell = date.strftime('%Y')
            elif ctype == 4:
                cell = True if cell == 1 else False
            data1.append(cell)
        data_all.append(data1)
    
    merra_id = []
    for i in range(1,rows):
        data2 = []
        for j in [0]:
            data2.append(sheet1.cell(i, j).value) 
        merra_id.append(data2)

    
    index = []
    for i in merra_id:
        if i not in index:
            index.append(i)
            
      
    index2 = []  
    for j in index:
        index1 = []
        for i, element in enumerate(merra_id):
            if element == j:
                index1.append(i)
        index2.append(index1)
    
    
    index4 = []
    for i in index2:
        index3 = []
        for j in i:
            index3.append(data_all[j])
        index4.append(index3)
    
       
    index5 = []
    for i in index4:
        i.sort(key=lambda x:x[1]) 
        index5.append(i)
        
    return index5

out_precip = ProcessClimate('MERRA_PRECIP_YEAR')
out_temp = ProcessClimate('MERRA_TEMP_YEAR')
out_wind = ProcessClimate('MERRA_WIND_YEAR')
out_humid = ProcessClimate('MERRA_HUMID_YEAR')
out_solar = ProcessClimate('MERRA_SOLAR_YEAR')

out = []
for (i1,i2,i3,i4,i5) in zip(out_precip,out_temp,out_wind,out_humid,out_solar):
    o1 = []
    o2 = []
    for (j1,j2,j3,j4,j5) in zip(i1,i2,i3,i4,i5):
        o1 = [j1[0],j1[1],j1[2],j1[3],j2[3],j2[4],j2[5],j3[2],j4[2],j5[2],j5[3]]
        o2.append(o1)
    out.append(o2)
